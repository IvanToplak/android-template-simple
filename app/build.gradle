plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

apply from: 'lint.gradle'

android {
    namespace 'hr.from.ivantoplak.pokemonapp'
    compileSdk 33

    defaultConfig {
        applicationId "hr.from.ivantoplak.pokemonapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "0.0.1"
        archivesBaseName = "android-template-v${versionName}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            // debug signing config is set for easier testing - CI should set the production one
            signingConfig signingConfigs.debug

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = "11"
        targetCompatibility = "11"
    }
    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of("11"))
        }
    }
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                "-opt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            logger.quiet("\t${variant.name} version:\t${archivesBaseName}")
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:$collections_immutable_version"

    // Android
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.core:core-splashscreen:$splashscreen_version"

    // Compose
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation composeBom
    androidTestImplementation composeBom

    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.material3:material3-window-size-class"
    implementation "androidx.compose.material:material-icons-core"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraintlayout_compose_version"

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    // Lifecycle dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    // Koin
    implementation "io.insert-koin:koin-android:$koin_android_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_android_compose_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Navigation
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Code style
    ktlint "com.pinterest:ktlint:$ktlint_version"

    // Test
    // Unit testing framework
    androidTestImplementation "androidx.test:rules:$android_test_rules_version"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    testImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"

    // Mockito
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"

    // Test Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
}
